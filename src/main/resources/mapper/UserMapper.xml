<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xingkong.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.xingkong.pojo.User" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name,phone,password
  </sql>
  
  <select id="findByNamePassword" resultType="com.xingkong.pojo.User" parameterType="hashmap" >
    select 
    *
    from user
    where user_name = #{userName} and password = #{password}
  </select>
  <select id="findOne" resultType="com.xingkong.pojo.User" parameterType="string" >
    select 
    *
    from user
    where user_id = #{id}
  </select>
  
  <select id="findAll" resultType="hashmap">
  	select
  	<include refid="Base_Column_List"/>
  	from user
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where test_id = #{testId,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.xingkong.pojo.User"  >
    insert into user (test_id,tenant_id, name, 
      age, test_type, test_date, 
      role, phone)
    values (#{testId},#{tenantId},#{name},#{age},#{testType},#{testDate}, 
      #{role}, #{phone})
  </insert>
  
  <insert id="insertSelective" parameterType="com.xingkong.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="testId != null" >
        test_id,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="testType != null" >
        test_type,
      </if>
      <if test="testDate != null" >
        test_date,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="phone != null" >
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="testId != null" >
        #{testId,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="testType != null" >
        #{testType,jdbcType=INTEGER},
      </if>
      <if test="testDate != null" >
        #{testDate,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null" >
        #{role,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.xingkong.pojo.User" >
    update user
    <set >
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="testType != null" >
        test_type = #{testType,jdbcType=INTEGER},
      </if>
      <if test="testDate != null" >
        test_date = #{testDate,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where test_id = #{testId,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.xingkong.pojo.User" >
    update user
    set tenant_id = #{tenantId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      test_type = #{testType,jdbcType=INTEGER},
      test_date = #{testDate,jdbcType=TIMESTAMP},
      role = #{role,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR}
    where test_id = #{testId,jdbcType=BIGINT}
  </update>
</mapper>